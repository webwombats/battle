### This file was generated by Nexus Schema
### Do not make changes to this file directly


type Argument {
  comments(after: CommentWhereUniqueInput, before: CommentWhereUniqueInput, first: Int, last: Int): [Comment!]!
  id: String!
  text: String!
}

input ArgumentWhereUniqueInput {
  id: String
}

type AuthPayload {
  token: String
  user: User
}

type Battle {
  arguments(after: ArgumentWhereUniqueInput, before: ArgumentWhereUniqueInput, first: Int, last: Int): [Argument!]!
  description: String!
  id: String!
  userId: String!
}

input BattleWhereUniqueInput {
  id: String
}

type Comment {
  id: String!
  text: String!
}

input CommentWhereUniqueInput {
  id: String
}

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the
`date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO
8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar DateTime

"""
The `JSON` scalar type represents JSON objects as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar Json

type Mutation {
  addArgument(battleId: ID!, text: String!): Argument
  addComment(argumentId: ID!, text: String!): Comment
  login(email: String!, password: String!): AuthPayload
  signup(email: String!, fullName: String!, password: String!, userName: String!): AuthPayload
}

type Query {
  battle(id: ID!): Battle
  battles(after: BattleWhereUniqueInput, before: BattleWhereUniqueInput, first: Int, last: Int): [Battle!]!
  me: User
  users(after: UserWhereUniqueInput, before: UserWhereUniqueInput, first: Int, last: Int): [User!]!
}

type User {
  battles(after: BattleWhereUniqueInput, before: BattleWhereUniqueInput, first: Int, last: Int): [Battle!]!
  email: String!
  fullName: String!
  id: String!
  userName: String!
}

input UserWhereUniqueInput {
  email: String
  id: String
  userName: String
}
